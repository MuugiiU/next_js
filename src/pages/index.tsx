import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { IMovie } from "../util/interfaces";
import Pagination from "@/components/pagination";
import { useState } from "react";
import { useRouter } from "next/router";

import usePosts from "@/hooks/usePosts";
import { userAgent } from "next/server";
import PaginationControlled from "@/components/pagination";

interface IMovies {
  movies: IMovie[];
  pagination: any;
}
export default function Home({ movies, pagination }: IMovies) {
  const router = useRouter();

  // const pages: [] = pagination.pageArr;
  const [cur, setCur] = useState<number>(1);

  const handlePagination = (action: string) => {
    if (action === "next") {
      router.replace(`?limit=4&page=${pagination.page + 1}`);
    } else {
      router.replace(`?limit=4&page=${pagination.page - 1}`);
    }
  };
  return (
    <>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1 className="font-bold text-blue-400 text-3xl text-center p-3">
          Welcome movie List
        </h1>
        <div className="bg-gray-200 container mx-auto">
          <div className=" grid grid-cols-4 gap-4 p-4 m-4">
            {movies.length > 0 &&
              movies.map((movie: IMovie) => (
                <div className="max-w-sm rounded-2xl overflow-hidden shadow-lg bg-white">
                  <div key={movie._id} className="group h-25">
                    <Image
                      src={movie.poster || ""}
                      alt="moviePhoto"
                      width={100}
                      height={100}
                      className="w-full h-80 object-cover rounded"
                    />
                    <div className="px-6 py-4">
                      <div className="font-bold text-xl mb-2">
                        {movie.title}
                        <p className="text text-yellow-400">
                          Rating:{movie.imdb.rating}
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
          </div>
          <div className="flex justify-center ">
            <PaginationControlled />
            //{" "}
            {/* <Pagination
            //   page={pages}
            //   cur={pagination.page}
            //   nextPage={() => {
            //     handlePagination("next");
            //   }}
            //   prevPage={() => {
            //     handlePagination("prev");
            //   }}
            // /> */}
          </div>
        </div>
      </div>
    </>
  );
}
export async function getServerSideProps(ctx: any) {
  const { page, limit } = ctx.query;
  console.log("page", page);
  console.log("limit", limit);
  const res = await fetch(
    `http://localhost:8001/movies?limit=20&page=${page || 1}`
  );
  const data = await res.json();
  console.log("DD", data.movies);
  return {
    props: { movies: data.movies, pagination: data.pagination },
  };
}
